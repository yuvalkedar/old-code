#include <avr/pgmspace.h>	//stores letter arrays in flash memory, more info here: http://arduino.cc/en/Reference/PROGMEM

String message = "םלוע םולש";	//PUT YOUR MESSAGE HERE!!- must be in all caps, spaces are fine, no punctuation

typedef struct FONT_CHAR_INFO {
  byte width;
  int  index;
};

// generated using: http://www.eran.io/the-dot-factory-an-lcd-font-and-image-generator/

PROGMEM byte palatinoLinotype_16ptBitmaps[] = 
{
	// @0 'A' (15 pixels wide)
	0x00, 0x02, 0x00, //               #     
	0x00, 0x06, 0x00, //              ##     
	0x00, 0x1E, 0x00, //            ####     
	0x00, 0xE2, 0x00, //         ###   #     
	0x03, 0x40, 0x00, //       ## #          
	0x1C, 0x40, 0x00, //    ###   #          
	0x60, 0x40, 0x00, //  ##      #          
	0xFC, 0x40, 0x00, // ######   #          
	0x7F, 0x40, 0x00, //  ####### #          
	0x1F, 0xE2, 0x00, //    ########   #     
	0x03, 0xFA, 0x00, //       ####### #     
	0x00, 0xFE, 0x00, //         #######     
	0x00, 0x1E, 0x00, //            ####     
	0x00, 0x06, 0x00, //              ##     
	0x00, 0x02, 0x00, //               #     

	// @45 'B' (12 pixels wide)
	0x80, 0x00, 0x00, // #                   
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x82, 0x02, 0x00, // #     #       #     
	0x82, 0x02, 0x00, // #     #       #     
	0x82, 0x02, 0x00, // #     #       #     
	0xC5, 0x06, 0x00, // ##   # #     ##     
	0xFD, 0xFC, 0x00, // ###### #######      
	0xF9, 0xFC, 0x00, // #####  #######      
	0x70, 0xF0, 0x00, //  ###    ####        

	// @81 'C' (12 pixels wide)
	0x0F, 0xE0, 0x00, //     #######         
	0x3F, 0xF8, 0x00, //   ###########       
	0x7F, 0xFC, 0x00, //  #############      
	0x70, 0x3C, 0x00, //  ###      ####      
	0xC0, 0x0E, 0x00, // ##          ###     
	0xC0, 0x06, 0x00, // ##           ##     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xC0, 0x04, 0x00, // ##           #      
	0x70, 0x04, 0x00, //  ###         #      

	// @117 'D' (15 pixels wide)
	0x80, 0x00, 0x00, // #                   
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xC0, 0x06, 0x00, // ##           ##     
	0xC0, 0x04, 0x00, // ##           #      
	0x70, 0x1C, 0x00, //  ###       ###      
	0x7F, 0xF8, 0x00, //  ############       
	0x3F, 0xF0, 0x00, //   ##########        
	0x0F, 0xC0, 0x00, //     ######          

	// @162 'E' (12 pixels wide)
	0x80, 0x00, 0x00, // #                   
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x81, 0x02, 0x00, // #      #      #     
	0x81, 0x02, 0x00, // #      #      #     
	0x81, 0x02, 0x00, // #      #      #     
	0x87, 0xC2, 0x00, // #    #####    #     
	0x80, 0x02, 0x00, // #             #     
	0xE0, 0x02, 0x00, // ###           #     
	0x00, 0x0E, 0x00, //             ###     

	// @198 'F' (11 pixels wide)
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x81, 0x02, 0x00, // #      #      #     
	0x81, 0x02, 0x00, // #      #      #     
	0x81, 0x00, 0x00, // #      #            
	0x87, 0xC0, 0x00, // #    #####          
	0x80, 0x00, 0x00, // #                   
	0xE0, 0x00, 0x00, // ###                 

	// @231 'G' (15 pixels wide)
	0x07, 0xC0, 0x00, //      #####          
	0x1F, 0xF0, 0x00, //    #########        
	0x3F, 0xF8, 0x00, //   ###########       
	0x78, 0x3C, 0x00, //  ####     ####      
	0x60, 0x0C, 0x00, //  ##         ##      
	0xC0, 0x06, 0x00, // ##           ##     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x42, 0x00, // #        #    #     
	0x80, 0x42, 0x00, // #        #    #     
	0x80, 0x7E, 0x00, // #        ######     
	0x40, 0x7C, 0x00, //  #       #####      
	0x70, 0x7C, 0x00, //  ###     #####      
	0x00, 0x40, 0x00, //          #          

	// @276 'H' (17 pixels wide)
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x81, 0x02, 0x00, // #      #      #     
	0x81, 0x02, 0x00, // #      #      #     
	0x01, 0x00, 0x00, //        #            
	0x01, 0x00, 0x00, //        #            
	0x01, 0x00, 0x00, //        #            
	0x81, 0x02, 0x00, // #      #      #     
	0x81, 0x02, 0x00, // #      #      #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     

	// @327 'I' (7 pixels wide)
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     

	// @348 'J' (8 pixels wide)
	0x00, 0x00, 0x30, //                   ##
	0x80, 0x00, 0x10, // #                  #
	0x80, 0x00, 0x30, // #                 ##
	0xFF, 0xFF, 0xE0, // ################### 
	0xFF, 0xFF, 0xC0, // ##################  
	0xFF, 0xFF, 0x00, // ################    
	0x80, 0x00, 0x00, // #                   
	0x80, 0x00, 0x00, // #                   

	// @372 'K' (15 pixels wide)
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x81, 0x82, 0x00, // #      ##     #     
	0x83, 0xC2, 0x00, // #     ####    #     
	0x05, 0xE0, 0x00, //      # ####         
	0x08, 0xF0, 0x00, //     #   ####        
	0x10, 0x78, 0x00, //    #     ####       
	0x20, 0x3C, 0x00, //   #       ####      
	0xC0, 0x1E, 0x00, // ##         ####     
	0x80, 0x0E, 0x00, // #           ###     
	0x80, 0x06, 0x00, // #            ##     
	0x00, 0x02, 0x00, //               #     

	// @417 'L' (11 pixels wide)
	0x80, 0x00, 0x00, // #                   
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0x00, 0x02, 0x00, //               #     
	0x00, 0x02, 0x00, //               #     
	0x00, 0x02, 0x00, //               #     
	0x00, 0x0E, 0x00, //             ###     

	// @450 'M' (20 pixels wide)
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xF0, 0x02, 0x00, // ####          #     
	0xFC, 0x02, 0x00, // ######        #     
	0x3F, 0x00, 0x00, //   ######            
	0x0F, 0xC0, 0x00, //     ######          
	0x03, 0xF0, 0x00, //       ######        
	0x00, 0xFC, 0x00, //         ######      
	0x00, 0x3E, 0x00, //           #####     
	0x00, 0x38, 0x00, //           ###       
	0x00, 0xC0, 0x00, //         ##          
	0x03, 0x00, 0x00, //       ##            
	0x0C, 0x02, 0x00, //     ##        #     
	0x30, 0x02, 0x00, //   ##          #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     

	// @510 'N' (17 pixels wide)
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xE0, 0x02, 0x00, // ###           #     
	0xF0, 0x02, 0x00, // ####          #     
	0x7C, 0x00, 0x00, //  #####              
	0x1E, 0x00, 0x00, //    ####             
	0x0F, 0x00, 0x00, //     ####            
	0x07, 0x80, 0x00, //      ####           
	0x03, 0xC0, 0x00, //       ####          
	0x01, 0xF0, 0x00, //        #####        
	0x00, 0x78, 0x00, //          ####       
	0x80, 0x3C, 0x00, // #         ####      
	0x80, 0x1E, 0x00, // #          ####     
	0xFF, 0xFE, 0x00, // ###############     
	0x80, 0x00, 0x00, // #                   
	0x80, 0x00, 0x00, // #                   

	// @561 'O' (15 pixels wide)
	0x0F, 0xE0, 0x00, //     #######         
	0x3F, 0xF8, 0x00, //   ###########       
	0x7F, 0xFC, 0x00, //  #############      
	0x70, 0x1C, 0x00, //  ###       ###      
	0xC0, 0x06, 0x00, // ##           ##     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xC0, 0x06, 0x00, // ##           ##     
	0x70, 0x1C, 0x00, //  ###       ###      
	0x7F, 0xFC, 0x00, //  #############      
	0x3F, 0xF8, 0x00, //   ###########       
	0x0F, 0xE0, 0x00, //     #######         

	// @606 'P' (12 pixels wide)
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x80, 0x02, 0x00, // #             #     
	0x81, 0x02, 0x00, // #      #      #     
	0x81, 0x00, 0x00, // #      #            
	0xC3, 0x00, 0x00, // ##    ##            
	0xFF, 0x00, 0x00, // ########            
	0x7E, 0x00, 0x00, //  ######             
	0x3C, 0x00, 0x00, //   ####              

	// @642 'Q' (15 pixels wide)
	0x0F, 0xE0, 0x00, //     #######         
	0x3F, 0xF8, 0x00, //   ###########       
	0x7F, 0xFC, 0x00, //  #############      
	0x70, 0x1C, 0x40, //  ###       ###   #  
	0xC0, 0x06, 0x80, // ##           ## #   
	0x80, 0x03, 0x80, // #             ###   
	0x80, 0x03, 0x80, // #             ###   
	0x80, 0x03, 0xC0, // #             ####  
	0x80, 0x02, 0xC0, // #             # ##  
	0x80, 0x02, 0xC0, // #             # ##  
	0xC0, 0x06, 0xE0, // ##           ## ### 
	0x70, 0x1C, 0x60, //  ###       ###   ## 
	0x7F, 0xFC, 0x60, //  #############   ## 
	0x3F, 0xF8, 0x40, //   ###########    #  
	0x0F, 0xE0, 0x80, //     #######     #   

	// @687 'R' (14 pixels wide)
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x80, 0x02, 0x00, // #             #     
	0x81, 0x02, 0x00, // #      #      #     
	0x81, 0xC0, 0x00, // #      ###          
	0xC3, 0xE0, 0x00, // ##    #####         
	0xFE, 0xF8, 0x00, // ####### #####       
	0xFC, 0x3E, 0x00, // ######    #####     
	0x78, 0x1E, 0x00, //  ####      ####     
	0x00, 0x06, 0x00, //              ##     
	0x00, 0x02, 0x00, //               #     

	// @729 'S' (10 pixels wide)
	0x1E, 0x1E, 0x00, //    ####    ####     
	0x7F, 0x06, 0x00, //  #######     ##     
	0x7F, 0x02, 0x00, //  #######      #     
	0xC7, 0x82, 0x00, // ##   ####     #     
	0x83, 0x82, 0x00, // #     ###     #     
	0x83, 0x82, 0x00, // #     ###     #     
	0x83, 0xC6, 0x00, // #     ####   ##     
	0xC1, 0xFC, 0x00, // ##     #######      
	0xF1, 0xFC, 0x00, // ####   #######      
	0x00, 0xF0, 0x00, //         ####        

	// @759 'T' (13 pixels wide)
	0xE0, 0x00, 0x00, // ###                 
	0x80, 0x00, 0x00, // #                   
	0x80, 0x00, 0x00, // #                   
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0xFF, 0xFE, 0x00, // ###############     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x02, 0x00, // #             #     
	0x80, 0x00, 0x00, // #                   
	0x80, 0x00, 0x00, // #                   
	0xE0, 0x00, 0x00, // ###                 

	// @798 'U' (15 pixels wide)
	0x80, 0x00, 0x00, // #                   
	0x80, 0x00, 0x00, // #                   
	0xFF, 0xF0, 0x00, // ############        
	0xFF, 0xFC, 0x00, // ##############      
	0xFF, 0xFC, 0x00, // ##############      
	0x80, 0x0E, 0x00, // #           ###     
	0x80, 0x06, 0x00, // #            ##     
	0x00, 0x06, 0x00, //              ##     
	0x00, 0x06, 0x00, //              ##     
	0x00, 0x06, 0x00, //              ##     
	0x80, 0x04, 0x00, // #            #      
	0x80, 0x0C, 0x00, // #           ##      
	0xFF, 0xF0, 0x00, // ############        
	0x80, 0x00, 0x00, // #                   
	0x80, 0x00, 0x00, // #                   

	// @843 'V' (15 pixels wide)
	0x80, 0x00, 0x00, // #                   
	0xE0, 0x00, 0x00, // ###                 
	0xF8, 0x00, 0x00, // #####               
	0xFE, 0x00, 0x00, // #######             
	0x9F, 0xC0, 0x00, // #  #######          
	0x07, 0xF0, 0x00, //      #######        
	0x00, 0xFC, 0x00, //         ######      
	0x00, 0x3E, 0x00, //           #####     
	0x00, 0x0C, 0x00, //             ##      
	0x00, 0x70, 0x00, //          ###        
	0x01, 0x80, 0x00, //        ##           
	0x8E, 0x00, 0x00, // #   ###             
	0xF0, 0x00, 0x00, // ####                
	0xC0, 0x00, 0x00, // ##                  
	0x80, 0x00, 0x00, // #                   

	// @888 'W' (20 pixels wide)
	0x80, 0x00, 0x00, // #                   
	0xE0, 0x00, 0x00, // ###                 
	0xFE, 0x00, 0x00, // #######             
	0xFF, 0xE0, 0x00, // ###########         
	0x9F, 0xFE, 0x00, // #  ############     
	0x01, 0xFE, 0x00, //        ########     
	0x00, 0x38, 0x00, //           ###       
	0x01, 0xC0, 0x00, //        ###          
	0x06, 0x00, 0x00, //      ##             
	0x38, 0x00, 0x00, //   ###               
	0xFE, 0x00, 0x00, // #######             
	0x3F, 0xC0, 0x00, //   ########          
	0x07, 0xF8, 0x00, //      ########       
	0x00, 0xFE, 0x00, //         #######     
	0x00, 0x1E, 0x00, //            ####     
	0x00, 0xF0, 0x00, //         ####        
	0x8F, 0x00, 0x00, // #   ####            
	0xF0, 0x00, 0x00, // ####                
	0xC0, 0x00, 0x00, // ##                  
	0x80, 0x00, 0x00, // #                   

	// @948 'X' (13 pixels wide)
	0x40, 0x02, 0x00, //  #            #     
	0x40, 0x02, 0x00, //  #            #     
	0xE0, 0x06, 0x00, // ###          ##     
	0xF0, 0x18, 0x00, // ####       ##       
	0x7C, 0x20, 0x00, //  #####    #         
	0x3F, 0xC0, 0x00, //   ########          
	0x0F, 0xC0, 0x00, //     ######          
	0x07, 0xF0, 0x00, //      #######        
	0x08, 0xF8, 0x00, //     #   #####       
	0x30, 0x3E, 0x00, //   ##      #####     
	0xC0, 0x1E, 0x00, // ##         ####     
	0x80, 0x06, 0x00, // #            ##     
	0x80, 0x02, 0x00, // #             #     

	// @987 'Y' (13 pixels wide)
	0x40, 0x00, 0x00, //  #                  
	0x60, 0x00, 0x00, //  ##                 
	0xF0, 0x00, 0x00, // ####                
	0x7C, 0x02, 0x00, //  #####        #     
	0x3F, 0x02, 0x00, //   ######      #     
	0x0F, 0xFE, 0x00, //     ###########     
	0x03, 0xFE, 0x00, //       #########     
	0x00, 0xFE, 0x00, //         #######     
	0x03, 0x02, 0x00, //       ##      #     
	0x0C, 0x02, 0x00, //     ##        #     
	0x10, 0x00, 0x00, //    #                
	0x60, 0x00, 0x00, //  ##                 
	0x80, 0x00, 0x00, // #                   

	// @1026 'Z' (13 pixels wide)
	0x00, 0x02, 0x00, //               #     
	0xE0, 0x06, 0x00, // ###          ##     
	0x80, 0x1E, 0x00, // #          ####     
	0x80, 0x3E, 0x00, // #         #####     
	0x80, 0xFA, 0x00, // #       ##### #     
	0x81, 0xE2, 0x00, // #      ####   #     
	0x87, 0xC2, 0x00, // #    #####    #     
	0x9F, 0x02, 0x00, // #  #####      #     
	0xBE, 0x02, 0x00, // # #####       #     
	0xF8, 0x02, 0x00, // #####         #     
	0xF0, 0x02, 0x00, // ####          #     
	0xC0, 0x02, 0x00, // ##            #     
	0x80, 0x0E, 0x00, // #           ###     
};

// Character descriptors for Palatino Linotype 16pt
// { [Char width in bits], [Offset into palatinoLinotype_16ptCharBitmaps in bytes] }
const FONT_CHAR_INFO palatinoLinotype_16ptDescriptors[] = 
{
	{15, 0}, 		// A 
	{12, 45}, 		// B 
	{12, 81}, 		// C 
	{15, 117}, 		// D 
	{12, 162}, 		// E 
	{11, 198}, 		// F 
	{15, 231}, 		// G 
	{17, 276}, 		// H 
	{7, 327}, 		// I 
	{8, 348}, 		// J 
	{15, 372}, 		// K 
	{11, 417}, 		// L 
	{20, 450}, 		// M 
	{17, 510}, 		// N 
	{15, 561}, 		// O 
	{12, 606}, 		// P 
	{15, 642}, 		// Q 
	{14, 687}, 		// R 
	{10, 729}, 		// S 
	{13, 759}, 		// T 
	{15, 798}, 		// U 
	{15, 843}, 		// V 
	{20, 888}, 		// W 
	{13, 948}, 		// X 
	{13, 987}, 		// Y 
	{13, 1026}, 		// Z 
};


//--------------------------------------------------------------------------

// Character bitmaps for Palatino Linotype 16pt
PROGMEM byte palatinoLinotype_16ptBitmaps_heb[] = 
{
	// @0 'א' (11 pixels wide)
	0x10, 0x1F, 0x80, //    #       ######     
	0x1C, 0x7F, 0x80, //    ###   ########     
	0x1E, 0xFF, 0x80, //    #### #########     
	0x0F, 0xE1, 0x80, //     #######    ##     
	0x07, 0xE0, 0x00, //      ######           
	0x01, 0xF8, 0x00, //        ######         
	0x00, 0x7E, 0x00, //          ######       
	0x18, 0xFF, 0x00, //    ##   ########      
	0x1F, 0xE7, 0x80, //    ########  ####     
	0x1F, 0xC3, 0x80, //    #######    ###     
	0x1F, 0x00, 0x80, //    #####        #     

	// @33 'ב' (12 pixels wide)
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     
	0x07, 0xFF, 0x80, //      ############     
	0x00, 0x01, 0x80, //                ##     
	0x00, 0x01, 0x80, //                ##     

	// @69 'ג' (9 pixels wide)
	0x00, 0x00, 0x80, //                 #     
	0x00, 0x03, 0x80, //               ###     
	0x00, 0x07, 0x80, //              ####     
	0x18, 0x0F, 0x00, //    ##       ####      
	0x18, 0x0E, 0x00, //    ##       ###       
	0x18, 0x1C, 0x00, //    ##      ###        
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     

	// @96 'ד' (10 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 

	// @126 'ה' (9 pixels wide)
	0x18, 0x7F, 0x80, //    ##    ########     
	0x18, 0x7F, 0x80, //    ##    ########     
	0x18, 0x7F, 0x80, //    ##    ########     
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     

	// @153 'ו' (5 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     

	// @168 'ז' (7 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 

	// @189 'ח' (11 pixels wide)
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     
	0x07, 0xFF, 0x80, //      ############     

	// @222 'ט' (12 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFE, 0x00, //    ############       
	0x1F, 0xFF, 0x00, //    #############      
	0x0F, 0xFF, 0x80, //     #############     
	0x00, 0x01, 0x80, //                ##     
	0x0E, 0x01, 0x80, //     ###        ##     
	0x1E, 0x01, 0x80, //    ####        ##     
	0x1E, 0x01, 0x80, //    ####        ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x00, //    #############      
	0x0F, 0xFE, 0x00, //     ###########       

	// @258 'י' (5 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xE0, 0x00, //    ########           
	0x1F, 0xE0, 0x00, //    ########           
	0x0F, 0xE0, 0x00, //     #######           

	// @273 'ך' (11 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0xF8, //    ################## 
	0x0F, 0xFF, 0xFC, //     ##################
	0x07, 0xFF, 0xFC, //      #################
	0x00, 0x00, 0x0C, //                     ##

	// @306 'כ' (10 pixels wide)
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x00, //     ############      
	0x07, 0xFE, 0x00, //      ##########       

	// @336 'ל' (11 pixels wide)
	0xF0, 0x00, 0x00, // ####                  
	0xF8, 0x00, 0x00, // #####                 
	0xF8, 0x00, 0x00, // #####                 
	0x18, 0x07, 0x00, //    ##        ###      
	0x18, 0x0F, 0x80, //    ##       #####     
	0x18, 0x1F, 0x80, //    ##      ######     
	0x18, 0x39, 0x80, //    ##     ###  ##     
	0x18, 0x78, 0x00, //    ##    ####         
	0x1F, 0xF0, 0x00, //    #########          
	0x1F, 0xE0, 0x00, //    ########           
	0x0F, 0xC0, 0x00, //     ######            

	// @369 'ם' (12 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     

	// @405 'מ' (12 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     
	0x0E, 0x00, 0x00, //     ###               
	0x1C, 0x00, 0x00, //    ###                
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x1C, 0x01, 0x80, //    ###         ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     
	0x07, 0xFF, 0x80, //      ############     

	// @441 'ן' (7 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0xF8, //    ################## 
	0x1F, 0xFF, 0xFC, //    ###################
	0x0F, 0xFF, 0xFC, //     ##################
	0x00, 0x00, 0x0C, //                     ##

	// @462 'נ' (6 pixels wide)
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     

	// @480 'ס' (12 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFE, 0x00, //    ############       
	0x1F, 0xFF, 0x00, //    #############      
	0x1F, 0xFF, 0x80, //    ##############     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x00, //    #############      
	0x0F, 0xFE, 0x00, //     ###########       

	// @516 'ע' (11 pixels wide)
	0x00, 0x01, 0x80, //                ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     
	0x00, 0x01, 0x80, //                ##     
	0x00, 0x01, 0x80, //                ##     
	0x00, 0x03, 0x80, //               ###     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x00, //    #############      
	0x1F, 0xFC, 0x00, //    ###########        

	// @549 'ף' (11 pixels wide)
	0x1F, 0xE0, 0x00, //    ########           
	0x1F, 0xF0, 0x00, //    #########          
	0x1F, 0xF0, 0x00, //    #########          
	0x18, 0x30, 0x00, //    ##     ##          
	0x18, 0x30, 0x00, //    ##     ##          
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0xF8, //    ################## 
	0x1F, 0xFF, 0xFC, //    ###################
	0x0F, 0xFF, 0xFC, //     ##################
	0x00, 0x00, 0x0C, //                     ##

	// @582 'פ' (9 pixels wide)
	0x1F, 0xE1, 0x80, //    ########    ##     
	0x1F, 0xF1, 0x80, //    #########   ##     
	0x1F, 0xF1, 0x80, //    #########   ##     
	0x18, 0x31, 0x80, //    ##     ##   ##     
	0x18, 0x31, 0x80, //    ##     ##   ##     
	0x18, 0x01, 0x80, //    ##          ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x00, //     ############      

	// @609 'ץ' (10 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0xF8, //    ################## 
	0x1F, 0xFF, 0xFC, //    ###################
	0x0F, 0xFF, 0xFC, //     ##################
	0x00, 0x30, 0x0C, //           ##        ##
	0x00, 0x70, 0x00, //          ###          
	0x18, 0xF0, 0x00, //    ##   ####          
	0x1F, 0xE0, 0x00, //    ########           
	0x1F, 0xC0, 0x00, //    #######            
	0x0F, 0x80, 0x00, //     #####             

	// @639 'צ' (11 pixels wide)
	0x18, 0x01, 0x80, //    ##          ##     
	0x1F, 0x81, 0x80, //    ######      ##     
	0x1F, 0xC1, 0x80, //    #######     ##     
	0x0F, 0xE1, 0x80, //     #######    ##     
	0x00, 0xF1, 0x80, //         ####   ##     
	0x00, 0x71, 0x80, //          ###   ##     
	0x00, 0x79, 0x80, //          ####  ##     
	0x18, 0xFD, 0x80, //    ##   ###### ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xCF, 0x80, //    #######  #####     
	0x0F, 0x07, 0x00, //     ####     ###      

	// @672 'ק' (10 pixels wide)
	0x18, 0x7F, 0xFC, //    ##    #############
	0x18, 0x7F, 0xFC, //    ##    #############
	0x18, 0x7F, 0xFC, //    ##    #############
	0x18, 0x07, 0x00, //    ##        ###      
	0x18, 0x1F, 0x80, //    ##      ######     
	0x18, 0x3F, 0x80, //    ##     #######     
	0x18, 0x79, 0x80, //    ##    ####  ##     
	0x1F, 0xF0, 0x00, //    #########          
	0x1F, 0xE0, 0x00, //    ########           
	0x0F, 0xC0, 0x00, //     ######            

	// @702 'ר' (10 pixels wide)
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     
	0x07, 0xFF, 0x80, //      ############     

	// @732 'ש' (13 pixels wide)
	0x0F, 0xFE, 0x00, //     ###########       
	0x1F, 0xFF, 0x00, //    #############      
	0x1F, 0xFF, 0x80, //    ##############     
	0x18, 0x03, 0x80, //    ##         ###     
	0x00, 0x01, 0x80, //                ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x00, 0x01, 0x80, //                ##     
	0x18, 0x03, 0x80, //    ##         ###     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x00, //    #############      
	0x0F, 0xFE, 0x00, //     ###########       

	// @771 'ת' (13 pixels wide)
	0x18, 0x01, 0x80, //    ##          ##     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x80, //    ##############     
	0x1F, 0xFF, 0x00, //    #############      
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x18, 0x00, 0x00, //    ##                 
	0x1C, 0x00, 0x00, //    ###                
	0x1F, 0xFF, 0x80, //    ##############     
	0x0F, 0xFF, 0x80, //     #############     
	0x07, 0xFF, 0x80, //      ############     
};

// Character descriptors for Palatino Linotype 16pt
// { [Char width in bits], [Offset into palatinoLinotype_16ptCharBitmaps in bytes] }
const FONT_CHAR_INFO palatinoLinotype_16ptDescriptors_heb[] = 
{
	{11, 0}, 		// א 
	{12, 33}, 		// ב 
	{9, 69}, 		// ג 
	{10, 96}, 		// ד 
	{9, 126}, 		// ה 
	{5, 153}, 		// ו 
	{7, 168}, 		// ז 
	{11, 189}, 		// ח 
	{12, 222}, 		// ט 
	{5, 258}, 		// י 
	{11, 273}, 		// ך 
	{10, 306}, 		// כ 
	{11, 336}, 		// ל 
	{12, 369}, 		// ם 
	{12, 405}, 		// מ 
	{7, 441}, 		// ן 
	{6, 462}, 		// נ 
	{12, 480}, 		// ס 
	{11, 516}, 		// ע 
	{11, 549}, 		// ף 
	{9, 582}, 		// פ 
	{10, 609}, 		// ץ 
	{11, 639}, 		// צ 
	{10, 672}, 		// ק 
	{10, 702}, 		// ר 
	{13, 732}, 		// ש 
	{13, 771}, 		// ת 
};

////////////////////////////////////////////////////////////

const byte *font = &palatinoLinotype_16ptBitmaps_heb[0];
const FONT_CHAR_INFO *fontDescriptor = palatinoLinotype_16ptDescriptors_heb;
const byte fontRowLength = 3;//in bytes;

int messageLength = message.length();
int refreshrate = 1500;//delay time for pixels to refresh in milliseconds- experiment with different values

//incoming data storage
byte data1 = 0;//for portB
byte data2 = 0;//for portC
byte data3 = 0;//for portD


void writeLetter(byte letterIndex) {
	FONT_CHAR_INFO fontCharInfo= fontDescriptor[letterIndex];
	const  byte *fontLetter = &font[fontCharInfo.index];
	
	for (int w=0;w<fontCharInfo.width; w++) { //scan font width
		//read font row (3 bytes)
		byte f0 = pgm_read_byte_near(&fontLetter[w*fontRowLength]);
		byte f1 = pgm_read_byte_near(&fontLetter[w*fontRowLength+1]); 
		byte f2 = pgm_read_byte_near(&fontLetter[w*fontRowLength+2]);
		
		//convert font 24 bits into 20 leds in our wiring scheme
		// font row:  00000000 11111111 2222xxxx
		// port data: 000000 00111111 112222
		//for first six rows of data
		data1 = f0>>2;
		
		//for next eight rows of data
		data2 = (f0<<6) | (f1>>2);
		
		//for next six rows of data
		data3 = ((f1<<6)>>2) | (f2>>4);
		
		//SET PINS:
		PORTB = data1;
		PORTD = data2;
		PORTC = data3;
		delayMicroseconds(refreshrate);
	}
}

void setup() {
	//port/pin assignments- set all pins to output- more info here: http://www.arduino.cc/en/Reference/PortManipulation
	DDRB = 0xFF;//port b- digital pins 8-13
	DDRC = 0xFF;//port c- anlog pins 0-5
	DDRD = 0xFF;//port d- digital pins 0-7
	
	//TODO: run intialization so we know device is working- leds should light up in order from top of wand to bottom
	for (int i=0,b=1;i<8;i++,b<<=1) {
		PORTB |=b;
		PORTD |=b;
		PORTC |=b;
		delay(350);
	}
	delay(1000);
	
	//clear ports- set all arduino pins to 0Volts
	PORTB = 0;
	PORTD = 0;
	PORTC = 0;
	
	//  Serial.begin(115200);
}

void loop() {
	for (int n=0; n<messageLength; n++) {
		byte letter = message.charAt(n);
		if (letter==215) {
			n++;
			letter = message.charAt(n);
		}
		
		//    if ((letter>='A') && (letter<='Z')) {
		//    if ((letter>='א') && (letter<='ת')) {
		if (letter>128) {
			int letterIndex = letter-'א';
			//     Serial.println(String("walla:")+letterIndex);
			writeLetter(letterIndex);
		}
		else {
			PORTB = 0;
			PORTD = 0;
			PORTC = 0;
			delayMicroseconds(refreshrate*4);//off for 3 pixels
		}
		//space between each character
		PORTB = 0;
		PORTD = 0;
		PORTC = 0;
		delayMicroseconds(refreshrate*2);
	}
	
	//space at the end
	PORTB = 0;
	PORTD = 0;
	PORTC = 0;
	delayMicroseconds(refreshrate*6);
}
